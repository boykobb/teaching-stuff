%----Подреждане на масив по метода на вмъкването------------
/insertion-sort {   % a -> a
  1 1 2 index length 1 sub {    % a i
    2 copy get exch {           % a a_i j
      dup 0 eq {exit} if
      dup 1 sub                 % a a_i j j-1
      dup 4 index exch get      % a a_i j j-1 a_(j-1)
      dup 4 index le {pop pop exit} if
      4 index 4 -1 roll 3 -1 roll put
    } loop
    2 index exch 3 -1 roll put
  } for
} def

%----Класиране на масив по метода на вмъкването-------------
/insertion-grade {   % a -> a ai
  dup [ 0 1 4 -1 roll length 1 sub {} for ]   % a ai
  1 1 2 index length 1 sub {    % a ai i
    2 copy get exch {           % a ai ai_i j
      dup 0 eq {exit} if
      dup 1 sub                 % a ai ai_i j j-1
      dup 4 index exch get      % a ai ai_i j j-1 ai_(j-1)
      dup 4 index 2 {7 index exch get exch} repeat   % a ai ai_i j j-1 ai_(j-1) a_(ai_(j-1)) a_(ai_i)
      le {pop pop exit} if
      4 index 4 -1 roll 3 -1 roll put
    } loop
    2 index exch 3 -1 roll put
  } for
} def

%----Пример-------------------------------------------------
[ 3 6 3 6 8 1 3 ] insertion-sort ==             % извежда [1 3 3 3 6 6 8]
[ 3 6 3 6 8 1 3 ] insertion-grade exch pop ==   % извежда [5 0 2 6 1 3 4]

quit
